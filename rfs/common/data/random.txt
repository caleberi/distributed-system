package common

import (
	"testing"
	"time"

	"github.com/stretchr/testify/assert"
)

func TestLeaseHolder(t *testing.T) {
	// Create a LeaseHolder with capacity 1
	lh := NewLeaseHolder(1)

	// Define Lease with expiration time of 1 second
	ls := &Lease{
		Handle:      ChunkHandle(34),
		Expire:      2 * time.Second,
		Primary:     "primary",
		Secondaries: []ServerAddr{"secondary1"},
	}

	// Enqueue a Lease
	assert.True(t, lh.Enqueue(ls), "Failed to enqueue a lease")

	// Acquire the Lease
	// acquiredLease, ok := lh.Acquire()
	// assert.True(t, ok, "Failed to acquire a lease")
	// assert.NotNil(t, acquiredLease, "Acquired lease is nil")
	// assert.Equal(t, ls.Handle, acquiredLease.Handle)
	// // Assert that Lease has expired
	// assert.False(t, lh.HoldsLease(), "Lease holder should not hold lease after expiration")

	// // Release the Lease
	// releasedLease, ok := lh.Release()
	// assert.False(t, ok, "Failed to release a lease since it should have expired")
	// assert.Nil(t, releasedLease, "Released lease is nil")
}
